#!/usr/bin/env node
const fs = require('fs')
const properties = require('../lib/properties')
const { isUrlifyableProperty, wait, randomDelay, formatLabel, getIconUrl } = require('../lib/links_data_helpers')
const { keyBy } = require('../lib/utils')

const promises = Object.values(properties)
  .filter(isUrlifyableProperty)
  .map(propertyData => {
    let { property, label, logo, urlFormat } = propertyData
    label = formatLabel(label)
    // Spreading calls on a some seconds
    return wait(randomDelay())
    .then(() => getIconUrl(logo))
    .then(icon => {
      propertyData.icon = icon
      return { property, label, icon, urlFormat }
    })
    .catch(err => {
      console.error('generate_links_data err', err)
      return { property, label, urlFormat }
    })
  })

Promise.all(promises)
.then(propertiesData => {
  const index = keyBy(propertiesData, 'property')
  const json = JSON.stringify(index, null, 2)
  const file = `// Generated by scripts/generate_links_data\nmodule.exports = ${json}`
  fs.writeFileSync('./lib/properties_links_data.js', file)
})
