#!/usr/bin/env node
const fs = require('fs')
const properties = require('../assets/js/properties')
const { isUrlifyableProperty, wait, formatLabel, getIconUrl } = require('../lib/links_data_helpers')

const urlifyablePropertyData = Object.values(properties).filter(isUrlifyableProperty)
const propertiesData = {}

const getIconUrlSequentially = async propertyData => {
  propertyData = propertyData || urlifyablePropertyData.pop()
  if (!propertyData) return
  let { property, label, logo, urlFormat } = propertyData
  label = formatLabel(label)
  try {
    const icon = await getIconUrl(logo)
    propertyData.icon = icon
    propertiesData[property] = { property, label, icon, urlFormat }
  } catch (err) {
    if (err.statusCode === 429) {
      await wait(1000)
      return getIconUrlSequentially(propertyData)
    }
    console.error('generate_links_data err', err)
    propertiesData[property] = { property, label, urlFormat }
  }
  return getIconUrlSequentially()
}

Promise.all([
  getIconUrlSequentially(),
  getIconUrlSequentially(),
  getIconUrlSequentially(),
  getIconUrlSequentially(),
  getIconUrlSequentially(),
])
.then(() => {
  const json = JSON.stringify(propertiesData, null, 2)
  const file = `// Generated by scripts/generate_links_data\nmodule.exports = ${json}`
  fs.writeFileSync('./assets/js/properties_links_data.js', file)
})
.catch(console.error)
